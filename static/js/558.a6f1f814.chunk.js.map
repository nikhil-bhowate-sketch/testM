{"version":3,"file":"static/js/558.a6f1f814.chunk.js","mappings":"uOAgEA,EA5Dc,WACV,OAAgCA,EAAAA,EAAAA,UAAS,IAAG,eAArCC,EAAQ,KAAEC,EAAW,KAC5B,GAAwCF,EAAAA,EAAAA,UAAS,IAAG,eAA7CG,EAAY,KAAEC,EAAe,KACpC,GAA0BJ,EAAAA,EAAAA,UAAS,IAAG,eAA/BK,EAAK,KAAEC,EAAQ,KACtB,GAAkCN,EAAAA,EAAAA,UAAS,IAAG,eAAvCO,EAAS,KAAEC,EAAY,KAC9B,GAAoCR,EAAAA,EAAAA,UAAS,IAAG,eAAzCS,EAAU,KAAEC,EAAa,KAEhC,GAAoBV,EAAAA,EAAAA,WAAS,GAAM,eAA5BW,EAAE,KAAEC,EAAK,KAChB,GAAsBZ,EAAAA,EAAAA,WAAS,GAAM,eAA9Ba,EAAG,KAAEC,EAAM,KACZC,GAAWC,EAAAA,EAAAA,MACXC,EAAO,yCAAG,yGACMC,EAAAA,EAAAA,IAAU,kGAAiG,OAAvHC,EAAG,OACTC,aAAaC,QAAQ,QAASF,EAAIG,KAAKC,eAAc,2CACxD,kBAHY,mCAIPC,EAAO,yCAAG,2FAEqE,OAD3EC,EAAQL,aAAaM,QAAQ,SAC7BC,EAAO,CAAEC,SAAU3B,EAAU4B,SAAU1B,EAAcoB,cAAeE,GAAO,SAC/DP,EAAAA,EAAAA,KAAW,iHAAkHS,GAAK,QAC3H,IADhB,OACDL,KAAKQ,SACTf,EAAS,SACZ,2CACJ,kBAPY,oCAQbgB,EAAAA,EAAAA,YAAU,WAAQd,GAAU,GAAG,IAkB/B,OACI,+BACI,iBAAMe,SAnBO,SAACC,GAClBA,EAAEC,iBACsB,KAApBjC,EAASkC,QAAyC,KAAxBhC,EAAagC,OACvCC,MAAM,2BAEmB,KAApBnC,EAASkC,QACd3B,EAAa,kBACbI,GAAM,IAEuB,KAAxBT,EAAagC,QAClBzB,EAAc,kBACdI,GAAO,IAEFb,GAAYE,GACjBqB,IAAUa,OAAM,SAACJ,GAAQ3B,EAAS,uEAAwE,GAElH,EAGqC,UACzB,qBAASgC,UAAU,kBAAiB,WAChC,eAAIA,UAAU,mBAAkB,SAAC,aACjC,cAAGA,UAAU,YAAW,SAAC,yCACzB,iBAAKA,UAAU,iBAAgB,WAC3B,kBAAOA,UAAU,aAAaC,YAAY,WAAWC,SAAU,SAACP,GAAQ/B,EAAY+B,EAAEQ,OAAOC,OAAQ9B,GAAM,EAAO,IACjHD,GAAK,iBAAM2B,UAAU,QAAO,SAAE/B,IAAoB,IACnD,kBAAOoC,KAAK,WAAWL,UAAU,aAAaC,YAAY,WAAWC,SAAU,SAACP,GAAQ7B,EAAgB6B,EAAEQ,OAAOC,OAAQ5B,GAAO,EAAO,IACtID,GAAM,iBAAMyB,UAAU,QAAO,SAAE7B,IAAqB,IACrD,mBAAQ6B,UAAU,cAAa,SAAC,YAChC,iBAAMA,UAAU,QAAO,SAAEjC,aAMjD,EC9CA,MAbA,WACE,OACE,iCACE,mBAAQiC,UAAU,eAAc,UAC9B,gBAAKA,UAAU,aAAaM,IAAKC,EAAMC,IAAI,UAE7C,gBAAKR,UAAU,YAAW,UACxB,SAAC,EAAK,QAId,C","sources":["Componentes/Login.js","Pages/Signin.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport { useNavigate } from 'react-router';\n\nconst Login = () => {\n    const [userName, setUserName] = useState('')\n    const [userPassword, setUserPassWord] = useState('')\n    const [error, seterror] = useState('')\n    const [errorUser, seterrorUser] = useState('')\n    const [errorUserp, seterrorUserp] = useState('')\n\n    const [sh, setSh] = useState(false)\n    const [sh1, setSh1] = useState(false)\n    const navigate = useNavigate()\n    const fechApi = async () => {\n        const res = await axios.get('https://api.themoviedb.org/3/authentication/token/new?api_key=ae486947dace2da155505d781142e114')\n        localStorage.setItem('token', res.data.request_token)\n    }\n    const postApi = async () => {\n        const token = localStorage.getItem('token')\n        const body = { username: userName, password: userPassword, request_token: token }\n        const res = await axios.post('https://api.themoviedb.org/3/authentication/token/validate_with_login?api_key=ae486947dace2da155505d781142e114', body)\n        if (res.data.success === true) {\n            navigate('/home')\n        }\n    }\n    useEffect(() => { fechApi() }, [])\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (userName.trim() === \"\" && userPassword.trim() === \"\") {\n            alert('empty username password')\n        }\n        else if (userName.trim() === '') {\n            seterrorUser('empty username')\n            setSh(true)\n        }\n        else if (userPassword.trim() === '') {\n            seterrorUserp('empty password')\n            setSh1(true)\n        }\n        else if (userName && userPassword) {\n            postApi().catch((e) => { seterror('Invalid username and/or password: You did not provide a valid login.') })\n        }\n    }\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <section className='login_container'>\n                    <h1 className='container_header'>sign in</h1>\n                    <p className='sign_para'>Sign in to your Self Service Portal</p>\n                    <div className='sign_container'>\n                        <input className='sign_input' placeholder='Username' onChange={(e) => { setUserName(e.target.value); setSh(false) }} />\n                        {sh ? <span className='error'>{errorUser}</span> : ''}\n                        <input type='password' className='sign_input' placeholder='Password' onChange={(e) => { setUserPassWord(e.target.value); setSh1(false) }} />\n                        {sh1 ? <span className='error'>{errorUserp}</span> : ''}\n                        <button className='sign_button'>LOG IN</button>\n                        <span className='error'>{error}</span>\n                    </div>\n                </section>\n            </form>\n        </>\n    )\n}\n\nexport default Login","import './Signin.css';\nimport logo from '../Pages/Assets/properlogo.png';\nimport Login from '../Componentes/Login';\nfunction Signin() {\n  return (\n    <>\n      <header className='login_header'>\n        <img className='login_logo' src={logo} alt='no' />\n      </header>\n      <div className='sing_form'>\n        <Login/>\n      </div>\n    </>\n  );\n}\n\nexport default Signin;\n"],"names":["useState","userName","setUserName","userPassword","setUserPassWord","error","seterror","errorUser","seterrorUser","errorUserp","seterrorUserp","sh","setSh","sh1","setSh1","navigate","useNavigate","fechApi","axios","res","localStorage","setItem","data","request_token","postApi","token","getItem","body","username","password","success","useEffect","onSubmit","e","preventDefault","trim","alert","catch","className","placeholder","onChange","target","value","type","src","logo","alt"],"sourceRoot":""}